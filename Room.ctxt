#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\r\n\r\n\ This\ class\ is\ part\ of\ the\ "World\ of\ Zuul"\ application.\ \r\n\ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ \r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ connected\ to\ other\ rooms\ via\ exits.\ \ The\ exits\ are\ labelled\ north,\ \r\n\ east,\ south,\ west.\ \ For\ each\ direction,\ the\ room\ stores\ a\ reference\r\n\ to\ the\ neighboring\ room,\ or\ null\ if\ there\ is\ no\ exit\ in\ that\ direction.\r\n\ It\ can\ have\ a\ non-player\ character\ who\ can\ talk\ and\ give\ the\ player\ proper\ help.\r\n\ There\ are\ items\ placed\ in\ a\ room.\r\n\ @author\ \ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes\r\n\ @version\ 2016.02.29\r\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n
comment10.params=
comment10.target=java.lang.String\ getLongDescription()
comment10.text=\r\n\ Return\ a\ long\ description\ of\ this\ room,\ of\ the\ form\:\r\n\ \ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ \ Exits\:\ north\ west\r\n\ @return\ A\ description\ of\ the\ room,\ including\ exits.\r\n
comment11.params=
comment11.target=java.lang.String\ greetingfromNPC()
comment11.text=\r\n\ Non-player\ character\ says\ hi.\r\n\ @return\ a\ string.\r\n
comment12.params=
comment12.target=boolean\ hasNPCharacter()
comment12.text=\r\n\ Return\ true\ if\ the\ room\ has\ a\ non-player\ character,\ false\ if\ not.\r\n\ @return\ true\ if\ the\ room\ has\ a\ non-player\ character,\ false\ if\ not.\r\n
comment13.params=
comment13.target=java.lang.String\ getItemString()
comment13.text=\r\n\ Get\ the\ information\ of\ the\ items\ in\ the\ room.\r\n\ @return\ the\ string\ contains\ information\ of\ the\ items\ in\ the\ room.\r\n
comment14.params=name\ itemDescription\ weight
comment14.target=void\ addItem(java.lang.String,\ java.lang.String,\ int)
comment14.text=\r\n\ Add\ an\ item\ to\ the\ items\ list.\r\n
comment15.params=itemName
comment15.target=boolean\ containsItem(java.lang.String)
comment15.text=\r\n\ Return\ true\ if\ the\ room\ contains\ an\ item,\ false\ if\ doesn't.\r\n\ @param\ the\ name\ of\ the\ item.\r\n\ @return\ true\ if\ the\ room\ contains\ this\ item.\r\n
comment16.params=itemName
comment16.target=Item\ getItem(java.lang.String)
comment16.text=\r\n\ Get\ a\ specified\ item\ of\ the\ room.\r\n\ @return\ an\ item\ in\ the\ room\ or\ null\ if\ there's\ no\ such\ item.\r\n
comment17.params=itemName
comment17.target=void\ removeItem(java.lang.String)
comment17.text=\r\n\ Remove\ an\ item\ from\ the\ room\r\n
comment18.params=item
comment18.target=void\ putItem(Item)
comment18.text=\r\n\ Put\ an\ item\ in\ the\ room.\r\n
comment19.params=
comment19.target=Person\ getNPC()
comment19.text=\r\n\ Get\ the\ non-player\ character\ of\ the\ room.\r\n\ @return\ the\ non-player\ character\ of\ the\ room.\r\n
comment2.params=name
comment2.target=void\ setNPCharacter(java.lang.String)
comment2.text=\r\n\ Set\ the\ non-player\ character\ of\ the\ room.\r\n
comment20.params=
comment20.target=void\ unlockAllExits()
comment20.text=\r\n\ Unlock\ all\ exits\ of\ the\ room\r\n
comment21.params=direction
comment21.target=void\ unlock2ways(java.lang.String)
comment21.text=\r\n\ Unlock\ the\ exit\ from\ two\ ends.\r\n
comment3.params=direction\ neighbor\ isLocked
comment3.target=void\ setExit(java.lang.String,\ Room,\ java.lang.Boolean)
comment3.text=\r\n\ Define\ the\ exits\ of\ this\ room.\ \ Every\ direction\ either\ leads\r\n\ to\ another\ room\ or\ is\ null\ (no\ exit\ there).\r\n\ Each\ exit\ can\ be\ locked\ or\ not\ locked.\r\n\ @param\ north\ The\ north\ exit.\r\n\ @param\ east\ The\ east\ east.\r\n\ @param\ south\ The\ south\ exit.\r\n\ @param\ west\ The\ west\ exit.\r\n\ @param\ true\ if\ the\ exit\ is\ locked,\ false\ is\ not.\r\n
comment4.params=
comment4.target=java.lang.String\ getDescription()
comment4.text=\r\n\ Return\ the\ description\ of\ the\ room.\r\n\ @return\ The\ description\ of\ the\ room.\r\n
comment5.params=direction
comment5.target=Room\ getExit(java.lang.String)
comment5.text=\r\n\ Get\ an\ exit\ room.\r\n\ @return\ the\ room\ that\ the\ exit\ leads\ to.\r\n
comment6.params=direction
comment6.target=boolean\ isExitLocked(java.lang.String)
comment6.text=\r\n\ Return\ true\ if\ the\ exit\ is\ locked,\ false\ if\ it\ is\ not\ locked\ or\ there's\ no\ exit.\r\n\ @return\ true\ if\ the\ exit\ is\ locked,\ false\ if\ it\ is\ not\ locked\ or\ there's\ no\ exit.\r\n
comment7.params=direction
comment7.target=void\ unlock(java.lang.String)
comment7.text=\r\n\ Unlock\ the\ exit\ only\ one\ way.\r\n\ @param\ the\ exit.\r\n
comment8.params=room
comment8.target=java.lang.String\ directionToRoom(Room)
comment8.text=\r\n\ Get\ the\ direction\ needed\ to\ go\ to\ a\ specified\ room.\r\n\ @return\ the\ String\ direction.\r\n
comment9.params=
comment9.target=java.lang.String\ getExitString()
comment9.text=\r\n\ Return\ a\ description\ of\ the\ room's\ exits,\r\n\ for\ example,\ "Exits\:\ north\ west".\r\n\ @return\ A\ description\ of\ the\ available\ exits.\r\n
numComments=22
